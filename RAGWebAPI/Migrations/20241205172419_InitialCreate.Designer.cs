// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;
using RAGWebAPI.Database;

#nullable disable

namespace RAGWebAPI.Migrations
{
    [DbContext(typeof(RAGDbContext))]
    [Migration("20241205172419_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RAGWebAPI.Models.Entities.RagPdfDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RagPdfDocuments");
                });

            modelBuilder.Entity("RAGWebAPI.Models.Entities.RagPdfPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(1024)");

                    b.Property<int>("PageNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RagPdfDocumentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RagPdfDocumentId");

                    b.ToTable("RagPdfPages");
                });

            modelBuilder.Entity("RAGWebAPI.Models.Entities.RagPdfPage", b =>
                {
                    b.HasOne("RAGWebAPI.Models.Entities.RagPdfDocument", "RagPdfDocument")
                        .WithMany("RagPdfPages")
                        .HasForeignKey("RagPdfDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RagPdfDocument");
                });

            modelBuilder.Entity("RAGWebAPI.Models.Entities.RagPdfDocument", b =>
                {
                    b.Navigation("RagPdfPages");
                });
#pragma warning restore 612, 618
        }
    }
}
